"use strict";(self.webpackChunkopendbm_website=self.webpackChunkopendbm_website||[]).push([[3423],{5318:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var r=n(7378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(n),u=i,m=f["".concat(l,".").concat(u)]||f[u]||d[u]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5052:function(e,t,n){n.r(t),n.d(t,{assets:function(){return b},contentTitle:function(){return u},default:function(){return y},frontMatter:function(){return f},metadata:function(){return m},toc:function(){return v}});var r=n(5318),i=Object.defineProperty,a=Object.defineProperties,o=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&p(e,n,t[n]);if(c)for(var n of c(t))s.call(t,n)&&p(e,n,t[n]);return e};const f={id:"sentiment-of-speech",title:"Sentiment of Speech"},u=void 0,m={unversionedId:"sentiment-of-speech",id:"sentiment-of-speech",title:"Sentiment of Speech",description:"This refers to the emotional valence of the transcribed text based. This determination is based on pre-trained models found in the vaderSentiment library. Positive values of sentiment indicate positive emotional valence, while negative values indicate negative emotional valence.",source:"@site/../docs/sentiment-of-speech.md",sourceDirName:".",slug:"/sentiment-of-speech",permalink:"/open_dbm/docs/next/sentiment-of-speech",draft:!1,editUrl:"https://github.com/AiCure/open_dbm/blob/master/docs/docs/../docs/sentiment-of-speech.md",tags:[],version:"current",lastUpdatedAt:1667489573,formattedLastUpdatedAt:"11/3/2022",frontMatter:{id:"sentiment-of-speech",title:"Sentiment of Speech"},sidebar:"variable",previous:{title:"Parts of Speech",permalink:"/open_dbm/docs/next/parts-of-speech"},next:{title:"Lexical Richness",permalink:"/open_dbm/docs/next/lexical-richness"}},b={},v=[{value:"Derived Variables",id:"derived-variables",level:2}],h={toc:v};function y(e){var t,n=e,{components:i}=n,p=((e,t)=>{var n={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&c)for(var r of c(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=d(d({},h),p),a(t,o({components:i,mdxType:"MDXLayout"}))),(0,r.kt)("p",null,"This refers to the emotional valence of the transcribed text based. This determination is based on pre-trained models found in the ",(0,r.kt)("a",d({parentName:"p"},{href:"https://pypi.org/project/vaderSentiment/"}),"vaderSentiment")," library. Positive values of sentiment indicate positive emotional valence, while negative values indicate negative emotional valence."),(0,r.kt)("h2",d({},{id:"derived-variables"}),"Derived Variables"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Variable"),(0,r.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",d({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"nlp_sentiment_mean_mean")),(0,r.kt)("td",d({parentName:"tr"},{align:null}),(0,r.kt)("strong",{parentName:"td"},"Sentiment of speech"),", ranging from -1 to 1, with -1 indicative negatively valenced speech and +1 indicative positively valenced speech.")))))}y.isMDXComponent=!0}}]);