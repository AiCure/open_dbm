"use strict";(self.webpackChunkopendbm_website=self.webpackChunkopendbm_website||[]).push([[8189],{5318:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return f}});var n=a(7378);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(a),f=i,d=m["".concat(p,".").concat(f)]||m[f]||s[f]||r;return a?n.createElement(d,l(l({ref:t},u),{},{components:a})):n.createElement(d,l({ref:t},u))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6440:function(e,t,a){a.r(t),a.d(t,{assets:function(){return y},contentTitle:function(){return f},default:function(){return b},frontMatter:function(){return m},metadata:function(){return d},toc:function(){return k}});var n=a(5318),i=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,s=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&u(e,a,t[a]);if(o)for(var a of o(t))c.call(t,a)&&u(e,a,t[a]);return e};const m={},f="Table of Contents",d={unversionedId:"facial-activity-api",id:"facial-activity-api",title:"Table of Contents",description:"* api",source:"@site/api/facial-activity-api.md",sourceDirName:".",slug:"/facial-activity-api",permalink:"/open_dbm/api/facial-activity-api",draft:!1,editUrl:"https://github.com/AiCure/open_dbm/blob/master/docs/docs/api/facial-activity-api.md",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"OpendDBM API",permalink:"/open_dbm/api/api-doc"},next:{title:"Table of Contents",permalink:"/open_dbm/api/movement-api"}},y={},k=[{value:"FacialActivity Objects",id:"facialactivity-objects",level:2},{value:"fit",id:"fit",level:4},{value:"Parameters",id:"parameters",level:2},{value:"get_landmark",id:"get_landmark",level:4},{value:"get_action_unit",id:"get_action_unit",level:4},{value:"get_asymmetry",id:"get_asymmetry",level:4},{value:"get_expressivity",id:"get_expressivity",level:4}],v={toc:k};function b(e){var t,a=e,{components:i}=a,u=((e,t)=>{var a={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&c.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=s(s({},v),u),r(t,l({components:i,mdxType:"MDXLayout"}))),(0,n.kt)("h1",s({},{id:"table-of-contents"}),"Table of Contents"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"#api"}),"api"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"#api.FacialActivity"}),"FacialActivity"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"#api.FacialActivity.fit"}),"fit")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"#api.FacialActivity.get_landmark"}),"get","_","landmark")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"#api.FacialActivity.get_action_unit"}),"get","_","action","_","unit")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"#api.FacialActivity.get_asymmetry"}),"get","_","asymmetry")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"#api.FacialActivity.get_expressivity"}),"get","_","expressivity"))))))),(0,n.kt)("a",{id:"api"}),(0,n.kt)("h1",s({},{id:"api"}),"api"),(0,n.kt)("a",{id:"api.FacialActivity"}),(0,n.kt)("h2",s({},{id:"facialactivity-objects"}),"FacialActivity Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-python"}),"class FacialActivity(VideoModel)\n")),(0,n.kt)("a",{id:"api.FacialActivity.fit"}),(0,n.kt)("h4",s({},{id:"fit"}),"fit"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-python"}),"def fit(path)\n")),(0,n.kt)("p",null,"Fit a file in filepath to OpenFace Model. Make sure to set the Docker to be active first.\nFor installation, see ",(0,n.kt)("a",s({parentName:"p"},{href:"https://aicure.github.io/open_dbm/docs/openface-docker-installation"}),"https://aicure.github.io/open_dbm/docs/openface-docker-installation")),(0,n.kt)("h2",s({},{id:"parameters"}),"Parameters"),(0,n.kt)("p",null,"path : string,\nFile Path of MP4/MOV file."),(0,n.kt)("a",{id:"api.FacialActivity.get_landmark"}),(0,n.kt)("h4",s({},{id:"get_landmark"}),"get","_","landmark"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-python"}),"def get_landmark()\n")),(0,n.kt)("p",null,"Get the model object of Landmark"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"self")," - object\nModel Object")),(0,n.kt)("a",{id:"api.FacialActivity.get_action_unit"}),(0,n.kt)("h4",s({},{id:"get_action_unit"}),"get","_","action","_","unit"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-python"}),"def get_action_unit()\n")),(0,n.kt)("p",null,"Get the model object of Action Unit"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"self")," - object\nModel Object")),(0,n.kt)("a",{id:"api.FacialActivity.get_asymmetry"}),(0,n.kt)("h4",s({},{id:"get_asymmetry"}),"get","_","asymmetry"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-python"}),"def get_asymmetry()\n")),(0,n.kt)("p",null,"Get the model object of Facial Asymmetry"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"self")," - object\nModel Object")),(0,n.kt)("a",{id:"api.FacialActivity.get_expressivity"}),(0,n.kt)("h4",s({},{id:"get_expressivity"}),"get","_","expressivity"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-python"}),"def get_expressivity()\n")),(0,n.kt)("p",null,"Get the model object of Facial Expressivity"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"self")," - object\nModel Object")))}b.isMDXComponent=!0}}]);